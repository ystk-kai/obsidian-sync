name: Rust CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_LOG: info

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./livesync-proxy
    steps:
    - uses: actions/checkout@v4
    
    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          livesync-proxy/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Install stable toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Check code format
      run: cargo fmt --all -- --check
      working-directory: ./livesync-proxy
    
    - name: Run clippy
      run: cargo clippy -- -D warnings
      working-directory: ./livesync-proxy
    
    - name: Run tests
      run: cargo test --verbose
      working-directory: ./livesync-proxy
    
    - name: Build
      run: cargo build --release --verbose
      working-directory: ./livesync-proxy

  docker:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        logout: false
    
    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}/livesync-proxy
        tags: |
          type=semver,pattern={{version}}
          type=ref,event=branch
          type=sha,format=long
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./livesync-proxy
        push: true
        platforms: linux/amd64,linux/arm64
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
